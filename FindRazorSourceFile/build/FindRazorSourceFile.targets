<Project>

  <PropertyGroup>
    <EnableFindRazorSourceFile Condition=" '$(Configuration)' != 'Release' AND '$(EnableFindRazorSourceFile)' == '' " >true</EnableFindRazorSourceFile>
    <_RazorSourceMapFilesDir>$(ProjectDir)$(IntermediateOutputPath)RazorSourceMapFiles\</_RazorSourceMapFilesDir>
    <_IsThisRazorClassLib Condition=" '$(UsingMicrosoftNETSdkWeb)' != 'true' AND '$(UsingMicrosoftNETSdkBlazorWebAssembly)' != 'true' ">true</_IsThisRazorClassLib>
    <_RazorSourceMapFilesStaticWebAssetsSourceType>Computed</_RazorSourceMapFilesStaticWebAssetsSourceType>
    <GenerateStaticWebAssetsPackTargetsDependsOn>_RemoveRazorSourceMapFilesFromPackage;$(GenerateStaticWebAssetsPackTargetsDependsOn);</GenerateStaticWebAssetsPackTargetsDependsOn>
  </PropertyGroup>

  <Target Name="_DefineFindRazorSourceFileProperties">
    <PropertyGroup>
      <_VersionOfApplyCssScopesTask Condition=" '$(_RazorSdkTasksTFM)' == 'net46' ">1</_VersionOfApplyCssScopesTask>
      <_VersionOfApplyCssScopesTask Condition=" '$(_VersionOfApplyCssScopesTask)' == '' ">2</_VersionOfApplyCssScopesTask>
    </PropertyGroup>
  </Target>

  <UsingTask TaskName="_FRSF_ComputeFingerprint" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <!-- Input parameteres -->
      <Items ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
      <!-- Output parameters -->
      <FingerprintedItems ParameterType="Microsoft.Build.Framework.ITaskItem[]" Output="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Linq" />
      <Using Namespace="System.Numerics" />
      <Using Namespace="System.Security.Cryptography" />
      <Using Namespace="Microsoft.Build.Framework" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[

static byte[] ComputeHash(ITaskItem item) {
    var contentBytes = File.ReadAllBytes(item.ItemSpec);
    using var sha256 = SHA256.Create();
    return sha256.ComputeHash(contentBytes);
}

static string ToBase36(byte[] hash)
{
    var array = new char[10];
    var buff = new byte[10];
    Array.Copy(hash, buff, 10);
    var dividend = BigInteger.Abs(new BigInteger(buff));
    for (var i = 0; i < 10; i++)
    {
        dividend = BigInteger.DivRem(dividend, 36, out var remainder);
        array[i] = "0123456789abcdefghijklmnopqrstuvwxyz"[(int)remainder];
    }
    return new string(array);
}

var fingerprintedItems = new List<ITaskItem>();
var projectEndpoints = new List<ITaskItem>();
foreach (var item in this.Items)
{
    var fingerprintedItem = new TaskItem(item.ItemSpec);
    
    var hash = default(byte[]);
    var integrity = fingerprintedItem.GetMetadata("Integrity");
    var fingerprint = fingerprintedItem.GetMetadata("Fingerprint");
    if (string.IsNullOrEmpty(integrity) || string.IsNullOrEmpty(fingerprint)) hash = ComputeHash(item);
    if (string.IsNullOrEmpty(integrity)) integrity = Convert.ToBase64String(hash);
    if (string.IsNullOrEmpty(fingerprint)) fingerprint = ToBase36(hash);

    fingerprintedItem.SetMetadata("Integrity", integrity);
    fingerprintedItem.SetMetadata("Fingerprint", fingerprint);

    fingerprintedItems.Add(fingerprintedItem);
}
    
this.FingerprintedItems = fingerprintedItems.ToArray();

        ]]>
      </Code>
    </Task>
  </UsingTask>

  <Target Name="_GenerateRazorSourceMapFiles"
          BeforeTargets="AssignRazorComponentTargetPaths;AssignRazorGenerateTargetPaths"
          DependsOnTargets="ResolveScopedCssOutputs;_DefineFindRazorSourceFileProperties"
          Condition=" '$(EnableFindRazorSourceFile)' == 'true' ">

    <ItemGroup>
      <_Razor_without_Scope Include="%(RazorComponent.Identity)" Condition=" '%(RazorComponent.CssScope)' == '' " />
      <_Fictional_RazorCss Include="%(_Razor_without_Scope.Identity).css" Condition=" '%(_Razor_without_Scope.Identity)' != '' " />
    </ItemGroup>

    <ComputeCssScope ScopedCssInput="@(_Fictional_RazorCss)" Targetname="$(TargetName)">
      <Output TaskParameter="ScopedCss" ItemName="_Fictional_RazorCss_with_Scope" />
    </ComputeCssScope>

    <ApplyCssScopes RazorComponents="@(_Razor_without_Scope)" ScopedCss="@(_Fictional_RazorCss_with_Scope)"
                    Condition=" '$(_VersionOfApplyCssScopesTask)' == '1' ">
      <Output TaskParameter="RazorComponentsWithScopes" ItemName="_Razor_with_Scope" />
      <!--<Output TaskParameter="RazorGenerateWithScopes" ItemName="_RazorGenerateWithScopes" />-->
    </ApplyCssScopes>
    <ApplyCssScopes RazorComponents="@(_Razor_without_Scope)" ScopedCss="@(_Fictional_RazorCss_with_Scope)"
                    RazorGenerate=""
                    Condition=" '$(_VersionOfApplyCssScopesTask)' != '1' ">
      <Output TaskParameter="RazorComponentsWithScopes" ItemName="_Razor_with_Scope" />
      <!--<Output TaskParameter="RazorGenerateWithScopes" ItemName="_RazorGenerateWithScopes" />-->
    </ApplyCssScopes>

    <ItemGroup>
      <RazorComponent Remove="@(_Razor_with_Scope)" />
      <RazorComponent Include="@(_Razor_with_Scope)" />
    </ItemGroup>

    <MakeDir Directories="$(_RazorSourceMapFilesDir)"/>
    <WriteLinesToFile WriteOnlyWhenDifferent="true" Overwrite="true"
                      File="$(_RazorSourceMapFilesDir)%(RazorComponent.CssScope).txt"
                      Lines="$(ProjectName)|%(RazorComponent.Identity)|%(RazorComponent.FullPath)"
                      Condition=" '%(RazorComponent.CssScope)' != '' "/>

    <ItemGroup>
      <_RazorSourceMapFiles Include="$(_RazorSourceMapFilesDir)*.txt" />
    </ItemGroup>

    <_FRSF_ComputeFingerprint Items="@(_RazorSourceMapFiles)">
      <Output TaskParameter="FingerprintedItems" ItemName="_FingerprintedRazorSourceMapFiles" />
    </_FRSF_ComputeFingerprint>

    <ItemGroup>
      <StaticWebAsset Include="@(_FingerprintedRazorSourceMapFiles)">
        <SourceType>$(_RazorSourceMapFilesStaticWebAssetsSourceType)</SourceType>
        <SourceId>$(PackageId)</SourceId>
        <ContentRoot>$(_RazorSourceMapFilesDir)</ContentRoot>
        <BasePath>/</BasePath>
        <RelativePath>_content/FindRazorSourceFile/RazorSourceMapFiles/%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>Never</CopyToPublishDirectory>
        <OriginalItemSpec>%(FullPath)</OriginalItemSpec>
        <AssetKind>All</AssetKind>
        <AssetMode>All</AssetMode>
        <AssetRole>Primary</AssetRole>
        <AssetTraitName>RazorSourceMapFiles</AssetTraitName>
      </StaticWebAsset>
    </ItemGroup>

  </Target>

  <Target Name="_CleanRazorSourceMapFiles" AfterTargets="Clean" DependsOnTargets="_DefineFindRazorSourceFileProperties">
    <RemoveDir Directories="$(_RazorSourceMapFilesDir)"/>
  </Target>

  <Target Name="_RemoveRazorSourceMapFilesFromPackage">
    <ItemGroup>
      <StaticWebAsset Remove="@(StaticWebAsset)" Condition=" %(AssetTraitName) == 'RazorSourceMapFiles' "/>
    </ItemGroup>
  </Target>

</Project>
